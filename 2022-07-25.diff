

#################### Mon, 25 Jul 2022 19:00:26 +0000 ####################

--- po/git.pot.old	2022-07-25 19:00:26.046944893 +0000
+++ po/git.pot.new	2022-07-25 19:00:26.166947611 +0000
@@ -3,7 +3,7 @@
 msgid "Huh (%s)?"
 msgstr ""
 
-#: add-interactive.c builtin/merge.c builtin/rebase.c reset.c sequencer.c
+#: add-interactive.c builtin/rebase.c reset.c sequencer.c
 msgid "could not read index"
 msgstr ""
 
@@ -1661,8 +1661,8 @@
 msgstr ""
 
 #: blame.c builtin/commit.c builtin/log.c builtin/merge.c
-#: builtin/pack-objects.c builtin/shortlog.c bundle.c midx.c pack-bitmap.c
-#: ref-filter.c remote.c sequencer.c submodule.c
+#: builtin/pack-objects.c builtin/shortlog.c bundle.c midx.c ref-filter.c
+#: remote.c sequencer.c submodule.c
 msgid "revision walk setup failed"
 msgstr ""
 
@@ -2082,7 +2082,7 @@
 msgid "could not open '%s' for reading"
 msgstr ""
 
-#: builtin/am.c builtin/rebase.c sequencer.c strbuf.c wrapper.c
+#: builtin/am.c builtin/rebase.c strbuf.c wrapper.c
 #, c-format
 msgid "could not open '%s' for writing"
 msgstr ""
@@ -2374,8 +2374,8 @@
 msgstr ""
 
 #: builtin/am.c builtin/branch.c builtin/bugreport.c builtin/cat-file.c
-#: builtin/for-each-ref.c builtin/ls-files.c builtin/ls-tree.c
-#: builtin/replace.c builtin/tag.c builtin/verify-tag.c
+#: builtin/for-each-ref.c builtin/ls-tree.c builtin/replace.c builtin/tag.c
+#: builtin/verify-tag.c
 msgid "format"
 msgstr ""
 
@@ -3283,8 +3283,8 @@
 msgid "recurse through submodules"
 msgstr ""
 
-#: builtin/branch.c builtin/for-each-ref.c builtin/ls-files.c builtin/ls-tree.c
-#: builtin/tag.c builtin/verify-tag.c
+#: builtin/branch.c builtin/for-each-ref.c builtin/ls-tree.c builtin/tag.c
+#: builtin/verify-tag.c
 msgid "format to use for the output"
 msgstr ""
 
@@ -3620,10 +3620,6 @@
 msgid "allow -s and -t to work with broken/corrupt objects"
 msgstr ""
 
-#: builtin/cat-file.c builtin/log.c
-msgid "use mail map file"
-msgstr ""
-
 #: builtin/cat-file.c
 msgid "Batch objects requested on stdin (or --batch-all-objects)"
 msgstr ""
@@ -3637,10 +3633,6 @@
 msgstr ""
 
 #: builtin/cat-file.c
-msgid "stdin is NUL-terminated"
-msgstr ""
-
-#: builtin/cat-file.c
 msgid "read commands from stdin"
 msgstr ""
 
@@ -6395,10 +6387,6 @@
 msgstr ""
 
 #: builtin/fetch.c
-msgid "git fetch --bundle-uri=<uri> [<options>]"
-msgstr ""
-
-#: builtin/fetch.c
 msgid "fetch.parallel cannot be negative"
 msgstr ""
 
@@ -6535,14 +6523,6 @@
 msgstr ""
 
 #: builtin/fetch.c
-msgid "uri"
-msgstr ""
-
-#: builtin/fetch.c
-msgid "download bundle data from the given URI instead of from a remote"
-msgstr ""
-
-#: builtin/fetch.c
 msgid "couldn't find remote ref HEAD"
 msgstr ""
 
@@ -6841,7 +6821,7 @@
 msgid "quote placeholders suitably for Tcl"
 msgstr ""
 
-#: builtin/for-each-ref.c builtin/show-ref.c
+#: builtin/for-each-ref.c
 msgid "show only <n> matched refs"
 msgstr ""
 
@@ -8487,6 +8467,10 @@
 msgstr ""
 
 #: builtin/log.c
+msgid "use mail map file"
+msgstr ""
+
+#: builtin/log.c
 msgid "only decorate refs that match <pattern>"
 msgstr ""
 
@@ -8879,21 +8863,6 @@
 msgstr ""
 
 #: builtin/ls-files.c
-#, c-format
-msgid "bad ls-files format: element '%s' does not start with '('"
-msgstr ""
-
-#: builtin/ls-files.c
-#, c-format
-msgid "bad ls-files format: element '%s'does not end in ')'"
-msgstr ""
-
-#: builtin/ls-files.c
-#, c-format
-msgid "bad ls-files format: %%%.*s"
-msgstr ""
-
-#: builtin/ls-files.c
 msgid "git ls-files [<options>] [<file>...]"
 msgstr ""
 
@@ -9005,10 +8974,6 @@
 msgid "show sparse directories in the presence of a sparse index"
 msgstr ""
 
-#: builtin/ls-files.c
-msgid "--format cannot be used with -s, -o, -k, -t, --resolve-undo, --deduplicate, --eol"
-msgstr ""
-
 #: builtin/ls-remote.c
 msgid ""
 "git ls-remote [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n"
@@ -9637,13 +9602,6 @@
 msgid "Updating %s..%s\n"
 msgstr ""
 
-#: builtin/merge.c merge-ort-wrappers.c merge-recursive.c
-#, c-format
-msgid ""
-"Your local changes to the following files would be overwritten by merge:\n"
-"  %s"
-msgstr ""
-
 #: builtin/merge.c
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
@@ -11543,10 +11501,6 @@
 msgstr ""
 
 #: builtin/rebase.c
-msgid "update branches that point to commits that are being rebased"
-msgstr ""
-
-#: builtin/rebase.c
 msgid "add exec lines after each commit of the editable list"
 msgstr ""
 
@@ -12941,7 +12895,7 @@
 msgid "Could not write new index file."
 msgstr ""
 
-#: builtin/rev-list.c
+#: builtin/rev-list.c pack-bitmap.c
 #, c-format
 msgid "unable to get disk usage of %s"
 msgstr ""
@@ -13464,16 +13418,6 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 
-#: builtin/show-ref.c
-#, c-format
-msgid "invalid --count argument: (`%d' < 0)"
-msgstr ""
-
-#: builtin/show-ref.c
-#, c-format
-msgid "--count is incompatible with %s"
-msgstr ""
-
 #: builtin/sparse-checkout.c
 msgid "git sparse-checkout (init|list|set|add|reapply|disable) <options>"
 msgstr ""
@@ -13516,7 +13460,7 @@
 msgid "toggle the use of a sparse index"
 msgstr ""
 
-#: builtin/sparse-checkout.c commit-graph.c midx.c sequencer.c
+#: builtin/sparse-checkout.c commit-graph.c midx.c
 #, c-format
 msgid "unable to create leading directories of %s"
 msgstr ""
@@ -13633,14 +13577,6 @@
 msgstr ""
 
 #: builtin/stash.c
-msgid "git stash export (--print | --to-ref <ref>) [<stash>...]"
-msgstr ""
-
-#: builtin/stash.c
-msgid "git stash import <commit>"
-msgstr ""
-
-#: builtin/stash.c
 msgid "git stash pop [--index] [-q|--quiet] [<stash>]"
 msgstr ""
 
@@ -13671,12 +13607,12 @@
 msgstr ""
 
 #: builtin/stash.c
-msgid "No stash entries found."
+#, c-format
+msgid "Too many revisions specified:%s"
 msgstr ""
 
 #: builtin/stash.c
-#, c-format
-msgid "Too many revisions specified:%s"
+msgid "No stash entries found."
 msgstr ""
 
 #: builtin/stash.c
@@ -13871,60 +13807,6 @@
 msgid "include ignore files"
 msgstr ""
 
-#: builtin/stash.c
-#, c-format
-msgid "cannot parse commit %s"
-msgstr ""
-
-#: builtin/stash.c
-msgid "could not write commit"
-msgstr ""
-
-#: builtin/stash.c
-#, c-format
-msgid "not a valid revision: %s"
-msgstr ""
-
-#: builtin/stash.c
-#, c-format
-msgid "%s is not a valid exported stash commit"
-msgstr ""
-
-#: builtin/stash.c
-#, c-format
-msgid "cannot read commit buffer for %s"
-msgstr ""
-
-#: builtin/stash.c
-#, c-format
-msgid "cannot save the stash for %s"
-msgstr ""
-
-#: builtin/stash.c
-msgid "unable to write base commit"
-msgstr ""
-
-#: builtin/stash.c
-#, c-format
-msgid "unable to find stash entry %s"
-msgstr ""
-
-#: builtin/stash.c
-msgid "print the object ID instead of writing it to a ref"
-msgstr ""
-
-#: builtin/stash.c
-msgid "save the data to the given ref"
-msgstr ""
-
-#: builtin/stash.c
-msgid "exactly one of --print and --to-ref is required"
-msgstr ""
-
-#: builtin/stash.c
-msgid "--to-ref requires an argument"
-msgstr ""
-
 #: builtin/stripspace.c
 msgid "skip and remove all lines starting with comment character"
 msgstr ""
@@ -15429,24 +15311,6 @@
 msgid "only useful for debugging"
 msgstr ""
 
-#: bundle-uri.c
-msgid "failed to create temporary file"
-msgstr ""
-
-#: bundle-uri.c
-msgid "insufficient capabilities"
-msgstr ""
-
-#: bundle-uri.c
-#, c-format
-msgid "failed to download bundle from URI '%s'"
-msgstr ""
-
-#: bundle-uri.c
-#, c-format
-msgid "file at URI '%s' is not a bundle"
-msgstr ""
-
 #: bundle.c
 #, c-format
 msgid "unrecognized bundle hash algorithm: %s"
@@ -18448,10 +18312,6 @@
 msgstr ""
 
 #: fetch-pack.c
-msgid "Server supports filter"
-msgstr ""
-
-#: fetch-pack.c
 #, c-format
 msgid "invalid shallow line: %s"
 msgstr ""
@@ -18597,6 +18457,10 @@
 msgstr ""
 
 #: fetch-pack.c
+msgid "Server supports filter"
+msgstr ""
+
+#: fetch-pack.c
 #, c-format
 msgid "expected '%s', received '%s'"
 msgstr ""
@@ -18976,7 +18840,7 @@
 msgid "invalid argument %s, expecting --"
 msgstr ""
 
-#: git-merge-octopus.sh git-merge-resolve.sh
+#: git-merge-octopus.sh
 msgid "Error: Your local changes to the following files would be overwritten by merge"
 msgstr ""
 
@@ -19967,6 +19831,13 @@
 msgid "quoted CRLF detected"
 msgstr ""
 
+#: merge-ort-wrappers.c merge-recursive.c
+#, c-format
+msgid ""
+"Your local changes to the following files would be overwritten by merge:\n"
+"  %s"
+msgstr ""
+
 #: merge-ort.c merge-recursive.c
 #, c-format
 msgid "Failed to merge submodule %s (not checked out)"
@@ -20125,44 +19996,6 @@
 msgid "Note: %s not up to date and in way of checking out conflicted version; old copy renamed to %s"
 msgstr ""
 
-#: merge-ort.c
-#, c-format
-msgid ""
-"Recursive merging with submodules currently only supports trivial cases.\n"
-"Please manually handle the merging of each conflicted submodule.\n"
-"This can be accomplished with the following steps:\n"
-msgstr ""
-
-#: merge-ort.c
-#, c-format
-msgid ""
-" - go to submodule (%s), and either merge commit %s\n"
-"or update to an existing commit which has merged those changes\n"
-msgstr ""
-
-#: merge-ort.c
-#, c-format
-msgid "such as one listed above\n"
-msgstr ""
-
-#: merge-ort.c
-#, c-format
-msgid " - come back to superproject, and `git add"
-msgstr ""
-
-#: merge-ort.c
-#, c-format
-msgid " %s"
-msgstr ""
-
-#: merge-ort.c
-#, c-format
-msgid ""
-"` to record the above merge or update \n"
-" - resolve any other conflicts in the superproject\n"
-" - commit the resulting index in the superproject\n"
-msgstr ""
-
 #. TRANSLATORS: The %s arguments are: 1) tree hash of a merge
 #. base, and 2-3) the trees for the two trees we're merging.
 #.
@@ -21127,71 +20960,6 @@
 msgid "hash mismatch %s"
 msgstr ""
 
-#: pack-bitmap-write.c
-msgid "trying to write commit not in index"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "failed to load bitmap index (corrupted?)"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupted bitmap index (too small)"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupted bitmap index file (wrong header)"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "unsupported version '%d' for bitmap index file"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupted bitmap index file (too short to fit hash cache)"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupted bitmap index file (too short to fit lookup table)"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "duplicate entry in bitmap index: '%s'"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "corrupt ewah bitmap: truncated header for entry %d"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "corrupt ewah bitmap: commit index %u out of range"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupted bitmap pack index"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "invalid XOR offset in bitmap pack index"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "cannot fstat bitmap file"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "ignoring extra bitmap file: '%s'"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "checksum doesn't match in MIDX and bitmap"
-msgstr ""
-
 #: pack-bitmap.c
 msgid "multi-pack bitmap is missing required reverse index"
 msgstr ""
@@ -21207,68 +20975,8 @@
 msgstr ""
 
 #: pack-bitmap.c
-msgid "corrupt bitmap lookup table: triplet position out of index"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "corrupt bitmap lookup table: xor chain exceed entry count"
-msgstr ""
-
-#: pack-bitmap.c
 #, c-format
-msgid "corrupt bitmap lookup table: commit index %u out of range"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "corrupt ewah bitmap: truncated header for bitmap of commit \"%s\""
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "object '%s' not found in type bitmaps"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "object '%s' does not have a unique type"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "object '%s': real type '%s', expected: '%s'"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "object not in bitmap: '%s'"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "failed to load bitmap indexes"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "you must specify exactly one commit to test"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "commit '%s' doesn't have an indexed bitmap"
-msgstr ""
-
-#: pack-bitmap.c
-msgid "mismatch in bitmap results"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "could not find '%s' in pack '%s' at offset %<PRIuMAX>"
-msgstr ""
-
-#: pack-bitmap.c
-#, c-format
-msgid "unable to get disk usage of '%s'"
+msgid "could not find %s in pack %s at offset %<PRIuMAX>"
 msgstr ""
 
 #: pack-mtimes.c
@@ -21938,12 +21646,9 @@
 "l, label <label> = label current HEAD with a name\n"
 "t, reset <label> = reset HEAD to a label\n"
 "m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n"
-"        create a merge commit using the original merge commit's\n"
-"        message (or the oneline, if no original merge commit was\n"
-"        specified); use -c <commit> to reword the commit message\n"
-"u, update-ref <ref> = track a placeholder for the <ref> to be updated\n"
-"                      to this position in the new commits. The <ref> is\n"
-"                      updated at the end of the rebase\n"
+".       create a merge commit using the original merge commit's\n"
+".       message (or the oneline, if no original merge commit was\n"
+".       specified); use -c <commit> to reword the commit message\n"
 "\n"
 "These lines can be re-ordered; they are executed from top to bottom.\n"
 msgstr ""
@@ -22481,15 +22186,6 @@
 msgstr ""
 
 #: remote-curl.c
-msgid "protocol error: expected '<url> <path>', missing space"
-msgstr ""
-
-#: remote-curl.c
-#, c-format
-msgid "failed to download file at URL '%s'"
-msgstr ""
-
-#: remote-curl.c
 msgid "git-http-push failed"
 msgstr ""
 
@@ -23571,25 +23267,6 @@
 msgstr ""
 
 #: sequencer.c
-#, c-format
-msgid "another 'rebase' process appears to be running; '%s.lock' already exists"
-msgstr ""
-
-#: sequencer.c
-#, c-format
-msgid ""
-"Updated the following refs with %s:\n"
-"%s"
-msgstr ""
-
-#: sequencer.c
-#, c-format
-msgid ""
-"Failed to update the following refs with %s:\n"
-"%s"
-msgstr ""
-
-#: sequencer.c
 msgid "Cannot autostash"
 msgstr ""
 
@@ -23779,11 +23456,6 @@
 msgid "the script was already rearranged."
 msgstr ""
 
-#: sequencer.c
-#, c-format
-msgid "update-refs file at '%s' is invalid"
-msgstr ""
-
 #: setup.c
 #, c-format
 msgid "'%s' is outside repository at '%s'"
@@ -23914,20 +23586,12 @@
 msgstr ""
 
 #: setup.c
-msgid ""
-"\n"
-"\n"
-"Set the environment variable GIT_TEST_DEBUG_UNSAFE_DIRECTORIES=true and run\n"
-"again for more information."
-msgstr ""
-
-#: setup.c
 #, c-format
 msgid ""
 "detected dubious ownership in repository at '%s'\n"
 "To add an exception for this directory, call:\n"
 "\n"
-"\tgit config --global --add safe.directory %s%s"
+"\tgit config --global --add safe.directory %s"
 msgstr ""
 
 #: setup.c


#################### Mon, 25 Jul 2022 21:57:36 +0000 ####################

--- po/git.pot.old	2022-07-25 21:57:36.758795201 +0000
+++ po/git.pot.new	2022-07-25 21:57:36.882803385 +0000
@@ -3,7 +3,7 @@
 msgid "Huh (%s)?"
 msgstr ""
 
-#: add-interactive.c builtin/rebase.c reset.c sequencer.c
+#: add-interactive.c builtin/merge.c builtin/rebase.c reset.c sequencer.c
 msgid "could not read index"
 msgstr ""
 
@@ -1661,8 +1661,8 @@
 msgstr ""
 
 #: blame.c builtin/commit.c builtin/log.c builtin/merge.c
-#: builtin/pack-objects.c builtin/shortlog.c bundle.c midx.c ref-filter.c
-#: remote.c sequencer.c submodule.c
+#: builtin/pack-objects.c builtin/shortlog.c bundle.c midx.c pack-bitmap.c
+#: ref-filter.c remote.c sequencer.c submodule.c
 msgid "revision walk setup failed"
 msgstr ""
 
@@ -2082,7 +2082,7 @@
 msgid "could not open '%s' for reading"
 msgstr ""
 
-#: builtin/am.c builtin/rebase.c strbuf.c wrapper.c
+#: builtin/am.c builtin/rebase.c sequencer.c strbuf.c wrapper.c
 #, c-format
 msgid "could not open '%s' for writing"
 msgstr ""
@@ -2374,8 +2374,8 @@
 msgstr ""
 
 #: builtin/am.c builtin/branch.c builtin/bugreport.c builtin/cat-file.c
-#: builtin/for-each-ref.c builtin/ls-tree.c builtin/replace.c builtin/tag.c
-#: builtin/verify-tag.c
+#: builtin/for-each-ref.c builtin/ls-files.c builtin/ls-tree.c
+#: builtin/replace.c builtin/tag.c builtin/verify-tag.c
 msgid "format"
 msgstr ""
 
@@ -3283,8 +3283,8 @@
 msgid "recurse through submodules"
 msgstr ""
 
-#: builtin/branch.c builtin/for-each-ref.c builtin/ls-tree.c builtin/tag.c
-#: builtin/verify-tag.c
+#: builtin/branch.c builtin/for-each-ref.c builtin/ls-files.c builtin/ls-tree.c
+#: builtin/tag.c builtin/verify-tag.c
 msgid "format to use for the output"
 msgstr ""
 
@@ -3508,11 +3508,6 @@
 msgid "Unbundling objects"
 msgstr ""
 
-#: builtin/bundle.c builtin/remote.c
-#, c-format
-msgid "Unknown subcommand: %s"
-msgstr ""
-
 #: builtin/cat-file.c merge-recursive.c
 #, c-format
 msgid "cannot read object %s '%s'"
@@ -3620,6 +3615,10 @@
 msgid "allow -s and -t to work with broken/corrupt objects"
 msgstr ""
 
+#: builtin/cat-file.c builtin/log.c
+msgid "use mail map file"
+msgstr ""
+
 #: builtin/cat-file.c
 msgid "Batch objects requested on stdin (or --batch-all-objects)"
 msgstr ""
@@ -3633,6 +3632,10 @@
 msgstr ""
 
 #: builtin/cat-file.c
+msgid "stdin is NUL-terminated"
+msgstr ""
+
+#: builtin/cat-file.c
 msgid "read commands from stdin"
 msgstr ""
 
@@ -4971,11 +4974,6 @@
 msgid "Collecting commits from input"
 msgstr ""
 
-#: builtin/commit-graph.c builtin/multi-pack-index.c
-#, c-format
-msgid "unrecognized subcommand: %s"
-msgstr ""
-
 #: builtin/commit-tree.c
 msgid "git commit-tree [(-p <parent>)...] [-S[<keyid>]] [(-m <message>)...] [(-F <file>)...] <tree>"
 msgstr ""
@@ -6821,7 +6819,7 @@
 msgid "quote placeholders suitably for Tcl"
 msgstr ""
 
-#: builtin/for-each-ref.c
+#: builtin/for-each-ref.c builtin/show-ref.c
 msgid "show only <n> matched refs"
 msgstr ""
 
@@ -7539,11 +7537,6 @@
 msgid "git maintenance <subcommand> [<options>]"
 msgstr ""
 
-#: builtin/gc.c
-#, c-format
-msgid "invalid subcommand: %s"
-msgstr ""
-
 #: builtin/grep.c
 msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
 msgstr ""
@@ -8467,10 +8460,6 @@
 msgstr ""
 
 #: builtin/log.c
-msgid "use mail map file"
-msgstr ""
-
-#: builtin/log.c
 msgid "only decorate refs that match <pattern>"
 msgstr ""
 
@@ -8863,6 +8852,21 @@
 msgstr ""
 
 #: builtin/ls-files.c
+#, c-format
+msgid "bad ls-files format: element '%s' does not start with '('"
+msgstr ""
+
+#: builtin/ls-files.c
+#, c-format
+msgid "bad ls-files format: element '%s'does not end in ')'"
+msgstr ""
+
+#: builtin/ls-files.c
+#, c-format
+msgid "bad ls-files format: %%%.*s"
+msgstr ""
+
+#: builtin/ls-files.c
 msgid "git ls-files [<options>] [<file>...]"
 msgstr ""
 
@@ -8974,6 +8978,10 @@
 msgid "show sparse directories in the presence of a sparse index"
 msgstr ""
 
+#: builtin/ls-files.c
+msgid "--format cannot be used with -s, -o, -k, -t, --resolve-undo, --deduplicate, --eol"
+msgstr ""
+
 #: builtin/ls-remote.c
 msgid ""
 "git ls-remote [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n"
@@ -9602,6 +9610,13 @@
 msgid "Updating %s..%s\n"
 msgstr ""
 
+#: builtin/merge.c merge-ort-wrappers.c merge-recursive.c
+#, c-format
+msgid ""
+"Your local changes to the following files would be overwritten by merge:\n"
+"  %s"
+msgstr ""
+
 #: builtin/merge.c
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
@@ -10244,7 +10259,7 @@
 msgid "use notes from <notes-ref>"
 msgstr ""
 
-#: builtin/notes.c builtin/stash.c
+#: builtin/notes.c builtin/remote.c parse-options.c
 #, c-format
 msgid "unknown subcommand: %s"
 msgstr ""
@@ -11501,6 +11516,10 @@
 msgstr ""
 
 #: builtin/rebase.c
+msgid "update branches that point to commits that are being rebased"
+msgstr ""
+
+#: builtin/rebase.c
 msgid "add exec lines after each commit of the editable list"
 msgstr ""
 
@@ -12895,7 +12914,7 @@
 msgid "Could not write new index file."
 msgstr ""
 
-#: builtin/rev-list.c pack-bitmap.c
+#: builtin/rev-list.c
 #, c-format
 msgid "unable to get disk usage of %s"
 msgstr ""
@@ -13418,6 +13437,16 @@
 msgid "show refs from stdin that aren't in local repository"
 msgstr ""
 
+#: builtin/show-ref.c
+#, c-format
+msgid "invalid --count argument: (`%d' < 0)"
+msgstr ""
+
+#: builtin/show-ref.c
+#, c-format
+msgid "--count is incompatible with %s"
+msgstr ""
+
 #: builtin/sparse-checkout.c
 msgid "git sparse-checkout (init|list|set|add|reapply|disable) <options>"
 msgstr ""
@@ -13460,7 +13489,7 @@
 msgid "toggle the use of a sparse index"
 msgstr ""
 
-#: builtin/sparse-checkout.c commit-graph.c midx.c
+#: builtin/sparse-checkout.c commit-graph.c midx.c sequencer.c
 #, c-format
 msgid "unable to create leading directories of %s"
 msgstr ""
@@ -13577,6 +13606,14 @@
 msgstr ""
 
 #: builtin/stash.c
+msgid "git stash export (--print | --to-ref <ref>) [<stash>...]"
+msgstr ""
+
+#: builtin/stash.c
+msgid "git stash import <commit>"
+msgstr ""
+
+#: builtin/stash.c
 msgid "git stash pop [--index] [-q|--quiet] [<stash>]"
 msgstr ""
 
@@ -13607,12 +13644,12 @@
 msgstr ""
 
 #: builtin/stash.c
-#, c-format
-msgid "Too many revisions specified:%s"
+msgid "No stash entries found."
 msgstr ""
 
 #: builtin/stash.c
-msgid "No stash entries found."
+#, c-format
+msgid "Too many revisions specified:%s"
 msgstr ""
 
 #: builtin/stash.c
@@ -13807,6 +13844,60 @@
 msgid "include ignore files"
 msgstr ""
 
+#: builtin/stash.c
+#, c-format
+msgid "cannot parse commit %s"
+msgstr ""
+
+#: builtin/stash.c
+msgid "could not write commit"
+msgstr ""
+
+#: builtin/stash.c
+#, c-format
+msgid "not a valid revision: %s"
+msgstr ""
+
+#: builtin/stash.c
+#, c-format
+msgid "%s is not a valid exported stash commit"
+msgstr ""
+
+#: builtin/stash.c
+#, c-format
+msgid "cannot read commit buffer for %s"
+msgstr ""
+
+#: builtin/stash.c
+#, c-format
+msgid "cannot save the stash for %s"
+msgstr ""
+
+#: builtin/stash.c
+msgid "unable to write base commit"
+msgstr ""
+
+#: builtin/stash.c
+#, c-format
+msgid "unable to find stash entry %s"
+msgstr ""
+
+#: builtin/stash.c
+msgid "print the object ID instead of writing it to a ref"
+msgstr ""
+
+#: builtin/stash.c
+msgid "save the data to the given ref"
+msgstr ""
+
+#: builtin/stash.c
+msgid "exactly one of --print and --to-ref is required"
+msgstr ""
+
+#: builtin/stash.c
+msgid "--to-ref requires an argument"
+msgstr ""
+
 #: builtin/stripspace.c
 msgid "skip and remove all lines starting with comment character"
 msgstr ""
@@ -18312,6 +18403,10 @@
 msgstr ""
 
 #: fetch-pack.c
+msgid "Server supports filter"
+msgstr ""
+
+#: fetch-pack.c
 #, c-format
 msgid "invalid shallow line: %s"
 msgstr ""
@@ -18457,10 +18552,6 @@
 msgstr ""
 
 #: fetch-pack.c
-msgid "Server supports filter"
-msgstr ""
-
-#: fetch-pack.c
 #, c-format
 msgid "expected '%s', received '%s'"
 msgstr ""
@@ -18840,7 +18931,7 @@
 msgid "invalid argument %s, expecting --"
 msgstr ""
 
-#: git-merge-octopus.sh
+#: git-merge-octopus.sh git-merge-resolve.sh
 msgid "Error: Your local changes to the following files would be overwritten by merge"
 msgstr ""
 
@@ -19831,13 +19922,6 @@
 msgid "quoted CRLF detected"
 msgstr ""
 
-#: merge-ort-wrappers.c merge-recursive.c
-#, c-format
-msgid ""
-"Your local changes to the following files would be overwritten by merge:\n"
-"  %s"
-msgstr ""
-
 #: merge-ort.c merge-recursive.c
 #, c-format
 msgid "Failed to merge submodule %s (not checked out)"
@@ -19996,6 +20080,44 @@
 msgid "Note: %s not up to date and in way of checking out conflicted version; old copy renamed to %s"
 msgstr ""
 
+#: merge-ort.c
+#, c-format
+msgid ""
+"Recursive merging with submodules currently only supports trivial cases.\n"
+"Please manually handle the merging of each conflicted submodule.\n"
+"This can be accomplished with the following steps:\n"
+msgstr ""
+
+#: merge-ort.c
+#, c-format
+msgid ""
+" - go to submodule (%s), and either merge commit %s\n"
+"or update to an existing commit which has merged those changes\n"
+msgstr ""
+
+#: merge-ort.c
+#, c-format
+msgid "such as one listed above\n"
+msgstr ""
+
+#: merge-ort.c
+#, c-format
+msgid " - come back to superproject, and `git add"
+msgstr ""
+
+#: merge-ort.c
+#, c-format
+msgid " %s"
+msgstr ""
+
+#: merge-ort.c
+#, c-format
+msgid ""
+"` to record the above merge or update \n"
+" - resolve any other conflicts in the superproject\n"
+" - commit the resulting index in the superproject\n"
+msgstr ""
+
 #. TRANSLATORS: The %s arguments are: 1) tree hash of a merge
 #. base, and 2-3) the trees for the two trees we're merging.
 #.
@@ -20960,6 +21082,71 @@
 msgid "hash mismatch %s"
 msgstr ""
 
+#: pack-bitmap-write.c
+msgid "trying to write commit not in index"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "failed to load bitmap index (corrupted?)"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupted bitmap index (too small)"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupted bitmap index file (wrong header)"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "unsupported version '%d' for bitmap index file"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupted bitmap index file (too short to fit hash cache)"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupted bitmap index file (too short to fit lookup table)"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "duplicate entry in bitmap index: '%s'"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "corrupt ewah bitmap: truncated header for entry %d"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "corrupt ewah bitmap: commit index %u out of range"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupted bitmap pack index"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "invalid XOR offset in bitmap pack index"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "cannot fstat bitmap file"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "ignoring extra bitmap file: '%s'"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "checksum doesn't match in MIDX and bitmap"
+msgstr ""
+
 #: pack-bitmap.c
 msgid "multi-pack bitmap is missing required reverse index"
 msgstr ""
@@ -20975,8 +21162,68 @@
 msgstr ""
 
 #: pack-bitmap.c
+msgid "corrupt bitmap lookup table: triplet position out of index"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "corrupt bitmap lookup table: xor chain exceed entry count"
+msgstr ""
+
+#: pack-bitmap.c
 #, c-format
-msgid "could not find %s in pack %s at offset %<PRIuMAX>"
+msgid "corrupt bitmap lookup table: commit index %u out of range"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "corrupt ewah bitmap: truncated header for bitmap of commit \"%s\""
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "object '%s' not found in type bitmaps"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "object '%s' does not have a unique type"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "object '%s': real type '%s', expected: '%s'"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "object not in bitmap: '%s'"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "failed to load bitmap indexes"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "you must specify exactly one commit to test"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "commit '%s' doesn't have an indexed bitmap"
+msgstr ""
+
+#: pack-bitmap.c
+msgid "mismatch in bitmap results"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "could not find '%s' in pack '%s' at offset %<PRIuMAX>"
+msgstr ""
+
+#: pack-bitmap.c
+#, c-format
+msgid "unable to get disk usage of '%s'"
 msgstr ""
 
 #: pack-mtimes.c
@@ -21133,6 +21380,10 @@
 msgstr ""
 
 #: parse-options.c
+msgid "need a subcommand"
+msgstr ""
+
+#: parse-options.c
 #, c-format
 msgid "unknown option `%s'"
 msgstr ""
@@ -21646,9 +21897,12 @@
 "l, label <label> = label current HEAD with a name\n"
 "t, reset <label> = reset HEAD to a label\n"
 "m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n"
-".       create a merge commit using the original merge commit's\n"
-".       message (or the oneline, if no original merge commit was\n"
-".       specified); use -c <commit> to reword the commit message\n"
+"        create a merge commit using the original merge commit's\n"
+"        message (or the oneline, if no original merge commit was\n"
+"        specified); use -c <commit> to reword the commit message\n"
+"u, update-ref <ref> = track a placeholder for the <ref> to be updated\n"
+"                      to this position in the new commits. The <ref> is\n"
+"                      updated at the end of the rebase\n"
 "\n"
 "These lines can be re-ordered; they are executed from top to bottom.\n"
 msgstr ""
@@ -23267,6 +23521,25 @@
 msgstr ""
 
 #: sequencer.c
+#, c-format
+msgid "another 'rebase' process appears to be running; '%s.lock' already exists"
+msgstr ""
+
+#: sequencer.c
+#, c-format
+msgid ""
+"Updated the following refs with %s:\n"
+"%s"
+msgstr ""
+
+#: sequencer.c
+#, c-format
+msgid ""
+"Failed to update the following refs with %s:\n"
+"%s"
+msgstr ""
+
+#: sequencer.c
 msgid "Cannot autostash"
 msgstr ""
 
@@ -23456,6 +23729,11 @@
 msgid "the script was already rearranged."
 msgstr ""
 
+#: sequencer.c
+#, c-format
+msgid "update-refs file at '%s' is invalid"
+msgstr ""
+
 #: setup.c
 #, c-format
 msgid "'%s' is outside repository at '%s'"
@@ -23586,12 +23864,20 @@
 msgstr ""
 
 #: setup.c
+msgid ""
+"\n"
+"\n"
+"Set the environment variable GIT_TEST_DEBUG_UNSAFE_DIRECTORIES=true and run\n"
+"again for more information."
+msgstr ""
+
+#: setup.c
 #, c-format
 msgid ""
 "detected dubious ownership in repository at '%s'\n"
 "To add an exception for this directory, call:\n"
 "\n"
-"\tgit config --global --add safe.directory %s"
+"\tgit config --global --add safe.directory %s%s"
 msgstr ""
 
 #: setup.c
